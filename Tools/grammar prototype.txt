expression     → literal
               | unary
               | binary
               | grouping ;

literal        → NUMBER;
grouping       → "(" expression ")" ;
unary          → ( "-" ) expression ;
binary         → expression operator expression ;
operator       → "==" | "+"  | "-"  | "*" | "/" | "^" ;


--------------------------
expression      → equality ;
equality        → arithmetic ( "==" arithmetic )* ;
arithmetic      → term ( ( "+" | "-" ) term )* ;
term            → factor ( ( "*" | "/" ) factor )* ;
factor          → unary ( "^" factor )* ;
unary           → ( "-" ) unary | primary ;
primary         → NUMBER | "(" expression ")" ;
